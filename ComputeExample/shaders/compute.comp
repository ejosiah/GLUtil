#version 430 core

layout (local_size_x = 32, local_size_y = 32) in;

layout (rgba32f, binding=0) uniform image2D data;

uniform vec4 a = vec4(1);
uniform vec4 b = vec4(0);

float rand(vec2 st){
	return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);
}

void main(void){
	
	vec2 uv = vec2(gl_GlobalInvocationID.xy)/vec2(gl_NumWorkGroups * gl_WorkGroupSize).xy;
//	vec2 uv = (vec2(gl_LocalInvocationID.xy)/vec2(gl_WorkGroupSize.xy));

	uv *= 10;

	vec2 ipos = vec2(0);
	vec2 fpos = modf(uv, ipos);



	vec3 color = vec3(rand(ipos));
//	color = vec3(rand(uv/10));
//	color = vec3(fpos, 0.0);

	imageStore(data, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.0));
}