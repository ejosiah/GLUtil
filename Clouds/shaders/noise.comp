#version 450 core 

layout(local_size_x = 8, local_size_y = 8, local_size_z  = 8) in;

layout(rgba32f, binding = 0) uniform image3D noise;

uniform float octave = 0;
uniform bool doPerlinWorley = true;

float remap(float x, float a, float b, float c, float d){
	return (((x - a) / (b - a)) * (d - c)) + c;
}

vec3 remap(vec3 x, vec3 a, vec3 b, vec3 c, vec3 d){
	return (((x - a) / (b - a)) * (d - c)) + c;
}

float worleyFbm(vec3 p, float freq);

float perlinfbm(vec3 p, float freq, int octaves);


void main(){
	vec3 pos = vec3(gl_GlobalInvocationID)/(vec3(gl_NumWorkGroups * gl_WorkGroupSize));
    
    float freq = 4;
    int offset = doPerlinWorley ? 1 : 0;
    vec4 col = vec4(0);

    for(int i = 0; i < 3; i++){
        col[i + offset] = worleyFbm(pos, freq * pow(2, octave + i));
    }

    if(doPerlinWorley){
        float pfbm= mix(1., perlinfbm(pos, 2., 7), 0.5);
       pfbm = abs(pfbm * 2. - 1.); // billowy perlin noise
       // col.r += remap(pfbm, 0., 1., col[offset], 1.); 
        col.r += pfbm; 
    }

    imageStore(noise, ivec3(gl_GlobalInvocationID), col);
}

#pragma include("noise.glsl")
//#pragma include("hash.glsl")