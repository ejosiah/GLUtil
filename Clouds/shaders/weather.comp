#version 450 core 

#pragma compile(off)

#define CLOUD_COVERAGE 0
#define CLOUD_TYPE 1
#define PRECIPITATION 2

layout(local_size_x = 8, local_size_y = 8) in;

layout(rgba32f, binding = 0) uniform image2D out_image;

uniform int mode;

float perlinfbm(vec2 p, float freq, int octaves);

float remap(float x, float a, float b, float c, float d){
	return (((x - a) / (b - a)) * (d - c)) + c;
}

const vec2 fragCoord = vec2(gl_GlobalInvocationID.xy)/(vec2(gl_WorkGroupSize.xy * gl_NumWorkGroups.xy) - vec2(1));

void main(){
	vec4 color = vec4(0);



	switch(mode){
		case CLOUD_COVERAGE:
			float f0 = perlinfbm(fragCoord, 4, 1);
			f0 = remap(f0, -1, 1, 0, 1);
			color.r = f0;
			break;
		case CLOUD_TYPE:
			break;
		case PRECIPITATION:
			break;
	}

	imageStore(out_image, ivec2(gl_GlobalInvocationID.xy), color);
}

#pragma include("noise.glsl")