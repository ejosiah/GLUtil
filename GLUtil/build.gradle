def username = System.getProperty('user.home');
def includeDir = "$username/OneDrive/cpp/include"

def ext(f){
    def name = f.name
    def start = name.lastIndexOf('.') + 1
    def end = name.size() - 1
    name[start..end]
}



def recurse(f){
	def allowed = ['vert', 'frag', 'geom', 'comp', 'tess', 'tcs', 'tes', 'glsl']

    if(f.file) [f]
    else f.listFiles({ it.directory || allowed.contains(ext(it)) } as FileFilter).collect{ recurse(it) }
}

task installHeaders(type: Copy, dependsOn: 'compileShaders'){
	from 'include'
	into  includeDir
}

task compileShaders << {
	println("transfering to $includeDir")
//	def src = new File('shaders').listFiles().findAll{ it.isFile() }
	def src = recurse(new File('shaders')).flatten()
	def dest = new File("include/ncl/gl/shaders.h")
	dest.delete()
	dest << "#pragma once\n"
	dest << "#include <iostream>\n"
	src.findAll{ !it.text.contains("#pragma nocomp") }.each{
		def name = it.name.replace(".", "_")
		dest << "const std::string ${name}_shader = \""
		it.eachLine{ line -> dest << "${line.replace("\"", "\\\"")}\\n"   }
		dest << '";\n'
	}
}