#version 450 core

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

struct Particle{
	vec3 position;
	float damping;

	vec3 velocity;
	float inverseMass;

	vec3 acceleration;
	int forceGenerators;

	vec3 forceAccum;
	int _active;

	float lifetime;
};


uniform float dt;
uniform int numParticles;
uniform vec3 gravity;
uniform int id;

layout(std430, binding=0) buffer PARTICLE_SSBO{
	Particle particles[];
};

ivec3 totalWorkGroups = ivec3(gl_WorkGroupSize * gl_NumWorkGroups);

int globalIndex(){
	ivec3 size = totalWorkGroups;
	ivec3 pos = ivec3(gl_GlobalInvocationID);

	return pos.z * (size.y * size.x) + (pos.y * size.x) + pos.x;
}

void main(){
	int index = globalIndex();

	if(index > numParticles) return;

	
	bool _active = bool(particles[index]._active);
	Particle particle = particles[index];

	if(!_active) return;


	if(particle.inverseMass <= 0.0) return;
	
	if((particle.forceGenerators & id) != id) return;

	float mass = 1/particle.inverseMass;
	particle.forceAccum += mass * gravity;

	particles[index] = particle;

}