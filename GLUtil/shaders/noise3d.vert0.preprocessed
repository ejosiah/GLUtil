#version 450 core
#pragma debug(on)
#pragma optimize(off)
#pragma nocomp
uniform struct Light{
    vec4 pos;
    vec4 diff;
    vec4 spec;
} light;
out LightInterface{
    smooth vec3 direction;
    smooth vec3 eyes;
} light_out;
void doLight(vec4 pos, mat4 M){
    light_out.direction = ( (M * light.pos)  - pos).xyz;
    light_out.eyes = normalize(-pos.xyz);
}

uniform mat4 V;
uniform mat4 MV;
uniform mat4 MVP;
uniform mat3 normalMatrix;
uniform float scale = 0.2;
layout(location=0) in vec3 position;
layout(location=1) in vec3 normal;
smooth out vec3 texPos;
smooth out vec3 norm;
void main(){
	texPos = position * scale;
	norm = normal;
	doLight(MV * vec4(position, 1.0), V);
	gl_Position = MVP * vec4(position, 1);
}

