#version 450 core 

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

const int XSHIFT = 0;
const int YSHIFT = 1;
const int ZSHIFT = 2;

uniform int CELLSIZE;

struct Bounds{
	vec3 center;
	vec3 _min;
	vec3 _max;
};

struct Object{
	int id;
	int controlBits;
};

layout(std430, binding = 0 ) buffer OBJECT_SSB0{
	Object object[];
};

layout(std430, binding = 1 ) buffer CELL_ID_SSB0{
	int cellId[];	// H cell first
};

layout(std430, binding = 2 ) buffer BOUNDS_SSB0{
  Bounds bounds[];
 
 };

 ivec3 totalWorkGroups = ivec3(gl_WorkGroupSize * gl_NumWorkGroups);

int globalIndex(){
	ivec3 size = totalWorkGroups;
	ivec3 pos = ivec3(gl_GlobalInvocationID);

	return pos.z * (size.y * size.x) + (pos.y * size.x) + pos.x;
}


void main(){
	int index = globalIndex();
	vec3 pos = bounds[index].center;
	int hCell = (int(pos.x / CELLSIZE) << XSHIFT ) | (int(pos.y / CELLSIZE) << YSHIFT) | (int(pos.z / CELLSIZE) << ZSHIFT);
}